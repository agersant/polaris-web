name: Build
on: push

jobs:
    test:
        name: Run Tests
        runs-on: ubuntu-20.04

        steps:
            - name: Clone Polaris Web
              uses: actions/checkout@master
            - name: Clone Polaris
              run: git clone -b next http://github.com/agersant/polaris
            - uses: actions-rust-lang/setup-rust-toolchain@v1
              with:
                cache-workspaces: "polaris -> target"
            - name: Build Polaris
              working-directory: polaris
              run: cargo build --release
            - name: Run Polaris
              working-directory: polaris
              run: ./target/release/polaris -f -w ../dist -c ../automated.config.toml &

            - name: Install Node.js
              uses: actions/setup-node@v1
              with:
                  node-version: "18.12.1"
            - name: Install Polaris Web dependencies
              run: npm ci
            - name: Install browsers
              run: npx playwright install --with-deps
            - name: Run tests
              run: npm test
            - uses: actions/upload-artifact@v4
              with:
                name: playwright-report
                path: playwright-report/
                retention-days: 30

            - name: Upload Build
              uses: actions/upload-artifact@v4
              with:
                  name: web
                  path: dist

    release:
        name: Make Release
        needs: test
        runs-on: ubuntu-20.04
        if: github.ref == 'refs/heads/master'

        steps:
            - name: Retrieve Build
              uses: actions/download-artifact@v4.1.7
              with:
                  name: web
            - name: Compress Build
              run: zip -r web.zip web
            - name: Generate build number
              uses: einaregilsson/build-number@v3
              with:
                  token: ${{secrets.GITHUB_TOKEN}}
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: build-${{ env.BUILD_NUMBER }}
                  release_name: Polaris Web Build ${{ env.BUILD_NUMBER }}
                  draft: false
                  prerelease: false
            - name: Upload Release Content
              uses: actions/upload-release-asset@v1.0.1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: web.zip
                  asset_name: web.zip
                  asset_content_type: application/gzip
